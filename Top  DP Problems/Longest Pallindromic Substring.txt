Given a string s, find the longest palindromic subsequence's length in s. You may assume that the maximum length of s is 1000.

Example 1:
Input:

"bbbab"
Output:
4
One possible longest palindromic subsequence is "bbbb".
 

Example 2:
Input:

"cbbd"
Output:
2
One possible longest palindromic subsequence is "bb".
 --------------------------------------------------------------------------------------------------------------------------


class Solution {
    public int longestPalindromeSubseq(String s) {
        int n = s.length();
        int[] dp = new int[n];
        
        for(int i = n-1; i>=0; i--){
            
            dp[i] = 1;
            int prev = 0;
            
            for(int j = i+1; j < n; j++){
                int temp = dp[j];
                
                dp[j] = (s.charAt(i) == s.charAt(j)) ? (prev + 2) : Math.max( dp[j-1], dp[j] );
                            
                prev = temp;
            }
        }
        
        return dp[n-1];
        
    }
}