Given an integer array nums, find the contiguous subarray within an array (containing at least one number) which has the largest product.

Example 1:

Input: [2,3,-2,4]
Output: 6
Explanation: [2,3] has the largest product 6.
Example 2:

Input: [-2,0,-1]
Output: 0
Explanation: The result cannot be 2, because [-2,-1] is not a subarray.
---------------------------------------------------------------------------------------------------------------------------

class Solution {
   // public int maxProduct(int[] nums) {
        public int max(int a,int b){
    return (a>b) ? a : b ;
}

public int min(int a,int b){
    return (a<b) ? a : b ;
}

public int maxProduct(int[] nums) {
    int result = nums[0],
    prev_max = nums[0],
    prev_min = nums[0],
    curr_max = nums[0],
    curr_min = nums[0];
	
	// considering max and min because prev min and new min (-ve * -ve) can be greater than positive one 
	
    for(int i = 1 ; i < nums.length ; i++){
        curr_max = max(nums[i],max(prev_max*nums[i],prev_min*nums[i]));
        curr_min = min(nums[i],min(prev_max*nums[i],prev_min*nums[i]));
        result = max(curr_max,result);
        prev_max = curr_max;
        prev_min = curr_min;
    }
    return result;
        
        
    }
}